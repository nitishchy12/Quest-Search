// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file connectrpc/questions/v1/questions.proto (package connectrpc.questions.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file connectrpc/questions/v1/questions.proto.
 */
export const file_connectrpc_questions_v1_questions: GenFile = /*@__PURE__*/
  fileDesc("Cidjb25uZWN0cnBjL3F1ZXN0aW9ucy92MS9xdWVzdGlvbnMucHJvdG8SF2Nvbm5lY3RycGMucXVlc3Rpb25zLnYxImYKCFF1ZXN0aW9uEgoKAmlkGAEgASgJEgwKBHR5cGUYAiABKAkSDQoFdGl0bGUYAyABKAkSDwoHb3B0aW9ucxgEIAMoCRIOCgZibG9ja3MYBSADKAkSEAoIc29sdXRpb24YBiABKAkiSQoNU2VhcmNoUmVxdWVzdBINCgVxdWVyeRgBIAEoCRIMCgR0eXBlGAIgASgJEgwKBHBhZ2UYAyABKAUSDQoFbGltaXQYBCABKAUiWgoOU2VhcmNoUmVzcG9uc2USNAoJcXVlc3Rpb25zGAEgAygLMiEuY29ubmVjdHJwYy5xdWVzdGlvbnMudjEuUXVlc3Rpb24SEgoKdG90YWxDb3VudBgCIAEoBTJuCg9RdWVzdGlvblNlcnZpY2USWwoGU2VhcmNoEiYuY29ubmVjdHJwYy5xdWVzdGlvbnMudjEuU2VhcmNoUmVxdWVzdBonLmNvbm5lY3RycGMucXVlc3Rpb25zLnYxLlNlYXJjaFJlc3BvbnNlIgBiBnByb3RvMw");

/**
 * @generated from message connectrpc.questions.v1.Question
 */
export type Question = Message<"connectrpc.questions.v1.Question"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * @generated from field: repeated string options = 4;
   */
  options: string[];

  /**
   * @generated from field: repeated string blocks = 5;
   */
  blocks: string[];

  /**
   * @generated from field: string solution = 6;
   */
  solution: string;
};

/**
 * Describes the message connectrpc.questions.v1.Question.
 * Use `create(QuestionSchema)` to create a new message.
 */
export const QuestionSchema: GenMessage<Question> = /*@__PURE__*/
  messageDesc(file_connectrpc_questions_v1_questions, 0);

/**
 * @generated from message connectrpc.questions.v1.SearchRequest
 */
export type SearchRequest = Message<"connectrpc.questions.v1.SearchRequest"> & {
  /**
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: int32 page = 3;
   */
  page: number;

  /**
   * @generated from field: int32 limit = 4;
   */
  limit: number;
};

/**
 * Describes the message connectrpc.questions.v1.SearchRequest.
 * Use `create(SearchRequestSchema)` to create a new message.
 */
export const SearchRequestSchema: GenMessage<SearchRequest> = /*@__PURE__*/
  messageDesc(file_connectrpc_questions_v1_questions, 1);

/**
 * @generated from message connectrpc.questions.v1.SearchResponse
 */
export type SearchResponse = Message<"connectrpc.questions.v1.SearchResponse"> & {
  /**
   * @generated from field: repeated connectrpc.questions.v1.Question questions = 1;
   */
  questions: Question[];

  /**
   * @generated from field: int32 totalCount = 2;
   */
  totalCount: number;
};

/**
 * Describes the message connectrpc.questions.v1.SearchResponse.
 * Use `create(SearchResponseSchema)` to create a new message.
 */
export const SearchResponseSchema: GenMessage<SearchResponse> = /*@__PURE__*/
  messageDesc(file_connectrpc_questions_v1_questions, 2);

/**
 * @generated from service connectrpc.questions.v1.QuestionService
 */
export const QuestionService: GenService<{
  /**
   * @generated from rpc connectrpc.questions.v1.QuestionService.Search
   */
  search: {
    methodKind: "unary";
    input: typeof SearchRequestSchema;
    output: typeof SearchResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_connectrpc_questions_v1_questions, 0);

